{"version":3,"sources":["components/Square.js","components/Board.js","components/Game.js","helper.js","index.js"],"names":["Square","value","onClick","className","Board","squares","map","square","i","Game","useState","Array","fill","history","setHistory","stepNumber","setStepNumber","xIsNext","setXisNext","winner","lines","length","a","b","c","calculateWinner","xO","historyPoint","slice","current","_step","move","destination","step","ReactDOM","render","document","getElementById"],"mappings":"6MAEA,IAQeA,EARA,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,QACrB,OACI,wBAAQC,UAAWF,EAAK,kBAAcA,GAAU,UAAWC,QAASA,EAApE,SACKD,KCMEG,EARD,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASH,EAAZ,EAAYA,QAAZ,OACV,qBAAKC,UAAU,QAAf,SACKE,EAAQC,KAAI,SAACC,EAAQC,GAAT,OACT,cAAC,EAAD,CAAgBP,MAAOM,EAAQL,QAAS,kBAAMA,EAAQM,KAAzCA,SCkDVC,EApDF,WAAO,IAAD,EACeC,mBAAS,CAACC,MAAM,GAAGC,KAAK,QADvC,mBACRC,EADQ,KACCC,EADD,OAEqBJ,mBAAS,GAF9B,mBAERK,EAFQ,KAEIC,EAFJ,OAGeN,oBAAS,GAHxB,mBAGRO,EAHQ,KAGCC,EAHD,KAITC,ECRH,SAAyBd,GAW5B,IAVA,IAAMe,EAAQ,CACV,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEFZ,EAAI,EAAGA,EAAIY,EAAMC,OAAQb,IAAK,CAAC,IAAD,cACjBY,EAAMZ,GADW,GAC5Bc,EAD4B,KACzBC,EADyB,KACtBC,EADsB,KAEnC,GAAInB,EAAQiB,IAAMjB,EAAQiB,KAAOjB,EAAQkB,IAAMlB,EAAQiB,KAAOjB,EAAQmB,GAClE,OAAOnB,EAAQiB,GAGvB,OAAO,KDTQG,CAAgBZ,EAAQE,IACjCW,EAAKT,EAAU,IAAM,IAgC3B,OACI,qCACI,gEACA,cAAC,EAAD,CAAOZ,QAASQ,EAAQE,GAAab,QAjCzB,SAACM,GACjB,IAAMmB,EAAed,EAAQe,MAAM,EAAGb,EAAa,GAC7Cc,EAAUF,EAAaZ,GACvBV,EAAO,YAAOwB,GAGhBV,GAAUd,EAAQG,KAGtBH,EAAQG,GAAKkB,EACbZ,EAAW,GAAD,mBAAKa,GAAL,CAAmBtB,KAC7BW,EAAcW,EAAaN,QAC3BH,GAAYD,OAsBR,sBAAKd,UAAU,eAAf,UACI,gCACI,yCAfZU,EAAQP,KAAI,SAACwB,EAAOC,GAChB,IAAMC,EAAcD,EAAI,sBAAkBA,GAAS,cACnD,OACI,6BACI,wBAAQ7B,QAAS,kBAT7Bc,EADYiB,EAU8BF,QAR1Cb,EAAWe,EAAO,IAAM,GAFb,IAACA,GAUA,SAAsCD,KADjCD,SAeT,6BAAKZ,EAAS,WAAaA,EAAS,gBAAkBO,WE7CtEQ,IAASC,OAAO,cAAC,EAAD,IAAUC,SAASC,eAAe,W","file":"static/js/main.643fcf16.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Square = ({ value, onClick }) => {\r\n    return (\r\n        <button className={value ? `squares ${value}` : 'squares'} onClick={onClick}>\r\n            {value}\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default Square;\r\n","import React from \"react\";\r\nimport Square from \"./Square\";\r\n\r\nconst Board = ({ squares, onClick }) => (\r\n    <div className=\"board\">\r\n        {squares.map((square, i) => (\r\n            <Square key={i} value={square} onClick={() => onClick(i)} />\r\n        ))}\r\n    </div>\r\n);\r\n\r\nexport default Board;\r\n","import React, {useState} from 'react';\r\nimport { calculateWinner } from '../helper';\r\nimport Board from './Board';\r\n\r\nconst Game = () => {\r\n    const [history, setHistory] = useState([Array(9).fill(null)])\r\n    const [stepNumber, setStepNumber] = useState(0);\r\n    const [xIsNext, setXisNext] = useState(true);\r\n    const winner = calculateWinner(history[stepNumber])\r\n    const xO = xIsNext ? \"X\" : \"O\";\r\n\r\n    const handleClick = (i) => {\r\n        const historyPoint = history.slice(0, stepNumber + 1);\r\n        const current = historyPoint[stepNumber];\r\n        const squares = [...current];\r\n\r\n        // return if won or something is already in that square\r\n        if (winner || squares[i]) return;\r\n\r\n        // select square\r\n        squares[i] = xO;\r\n        setHistory([...historyPoint, squares]);\r\n        setStepNumber(historyPoint.length);\r\n        setXisNext(!xIsNext);\r\n    };\r\n\r\n    const jumpTo = (step) => {\r\n        setStepNumber(step);\r\n        setXisNext(step % 2 === 0);\r\n    };\r\n\r\n    const renderMoves = () =>\r\n        history.map((_step, move) => {\r\n            const destination = move ? `Go to move #${move}` : \"Go to Start\";\r\n            return (\r\n                <li key={move}>\r\n                    <button onClick={() => jumpTo(move)}>{destination}</button>\r\n                </li>\r\n            );\r\n        });\r\n\r\n    return (\r\n        <>\r\n            <h1>React Tic Tac Toe - With Hooks</h1>\r\n            <Board squares={history[stepNumber]} onClick={handleClick} />\r\n            <div className=\"info-wrapper\">\r\n                <div>\r\n                    <h3>History</h3>\r\n                    {renderMoves()}\r\n                </div>\r\n                <h3>{winner ? \"Winner: \" + winner : \"Next Player: \" + xO}</h3>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Game;\r\n","export function calculateWinner(squares) {\r\n    const lines = [\r\n        [0, 1, 2],\r\n        [3, 4, 5],\r\n        [6, 7, 8],\r\n        [0, 3, 6],\r\n        [1, 4, 7],\r\n        [2, 5, 8],\r\n        [0, 4, 8],\r\n        [2, 4, 6]\r\n    ];\r\n    for (let i = 0; i < lines.length; i++) {\r\n        const [a, b, c] = lines[i];\r\n        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n            return squares[a];\r\n        }\r\n    }\r\n    return null;\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Game from \"./components/Game\";\n\nReactDOM.render(<Game />, document.getElementById('root'));\n"],"sourceRoot":""}